#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de correction automatique des caract√®res Unicode probl√©matiques
Corrige tous les fichiers Python du projet
"""

import os
import re
import glob

def fix_unicode_chars(content):
    """Remplace les caract√®res Unicode probl√©matiques par des √©quivalents ASCII"""
    
    # Dictionnaire de remplacement
    replacements = {
        '‚Üí': '->',      # U+2192 RIGHTWARDS ARROW
        '‚úÖ': 'OK',     # U+2705 WHITE HEAVY CHECK MARK  
        '‚ùå': 'ERROR',  # U+274C CROSS MARK
        'üõë': 'STOP',   # U+1F6D1 STOP SIGN
        '‚ö†Ô∏è': 'WARNING', # U+26A0 WARNING SIGN
        'üì°': '[GPS]',  # U+1F4E1 SATELLITE ANTENNA
        'üîß': '[TOOL]', # U+1F527 WRENCH
        'üöÄ': '[START]',# U+1F680 ROCKET
        'üìä': '[STATS]',# U+1F4CA BAR CHART
        'üÜï': '[NEW]',  # U+1F195 NEW BUTTON
        '‚úì': 'OK',      # U+2713 CHECK MARK
        '‚è∏': '[PAUSE]', # U+23F8 PAUSE BUTTON
        '‚ñ∂': '[PLAY]',  # U+25B6 PLAY BUTTON
        '‚èπ': '[STOP]',  # U+23F9 STOP BUTTON
        'üî¥': '[ERROR]', # U+1F534 RED CIRCLE
        'üü¢': '[OK]',    # U+1F7E2 GREEN CIRCLE
        'üü°': '[WARN]',  # U+1F7E1 YELLOW CIRCLE
        '‚ö°': '[FAST]',  # U+26A1 HIGH VOLTAGE
        'üîÑ': '[SYNC]',  # U+1F504 COUNTERCLOCKWISE
        'üìù': '[LOG]',   # U+1F4DD MEMO
        'üåê': '[NET]',   # U+1F310 GLOBE
        'üì∂': '[SIGNAL]', # U+1F4F6 ANTENNA BARS
        
        # Caract√®res avec accents qui peuvent poser probl√®me
        '√©': 'e',
        '√®': 'e',
        '√†': 'a',
        '√π': 'u',
        '√ß': 'c',
        '√™': 'e',
        '√¢': 'a',
        '√Æ': 'i',
        '√¥': 'o',
        '√ª': 'u',
        '√´': 'e',
        '√Ø': 'i',
        '√º': 'u',
        '√∂': 'o',
        '√§': 'a',
    }
    
    # Appliquer tous les remplacements
    for unicode_char, ascii_replacement in replacements.items():
        content = content.replace(unicode_char, ascii_replacement)
    
    return content

def fix_file(filepath):
    """Corrige un fichier Python"""
    try:
        print(f"Correction de {filepath}...")
        
        # Lire le fichier
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Compter les caract√®res probl√©matiques avant
        original_content = content
        
        # Appliquer les corrections
        fixed_content = fix_unicode_chars(content)
        
        # V√©rifier s'il y a eu des changements
        if original_content != fixed_content:
            # Sauvegarder le fichier corrig√©
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(fixed_content)
            print(f"  ‚úì Fichier corrig√©: {filepath}")
            return True
        else:
            print(f"  - Aucune correction n√©cessaire: {filepath}")
            return False
            
    except Exception as e:
        print(f"  ‚úó Erreur lors de la correction de {filepath}: {e}")
        return False

def main():
    print("========================================")
    print("  CORRECTION DES CARACT√àRES UNICODE")
    print("========================================")
    print()
    
    # Liste des fichiers Python √† corriger
    python_files = [
        "nmea_server.py",
        "nmea_server_test.py",
        "nmea_server_manager.py", 
        "nmea_server_tray.py",
    ]
    
    # Ajouter tous les fichiers .py du r√©pertoire courant
    all_py_files = glob.glob("*.py")
    for py_file in all_py_files:
        if py_file not in python_files:
            python_files.append(py_file)
    
    files_corrected = 0
    files_processed = 0
    
    for filename in python_files:
        if os.path.exists(filename):
            files_processed += 1
            if fix_file(filename):
                files_corrected += 1
        else:
            print(f"  - Fichier non trouv√©: {filename}")
    
    print()
    print("========================================")
    print("           R√âSUM√â")
    print("========================================")
    print(f"Fichiers trait√©s: {files_processed}")
    print(f"Fichiers corrig√©s: {files_corrected}")
    print()
    
    if files_corrected > 0:
        print("‚úì Corrections appliqu√©es avec succ√®s!")
        print("Vous pouvez maintenant relancer vos applications.")
    else:
        print("- Aucune correction n√©cessaire.")
    
    print()
    return files_corrected

if __name__ == "__main__":
    main()
